#Drawing modpacks that are already downloaded.
    for installer in os.listdir(settings.path_to_installers):

        if "#.nova_hub" in os.listdir(settings.path_to_installers + installer + "\\"):
            print_and_log(None, installer)
            try:
                run = importlib.import_module(f"installers.{installer}.run")

            except Exception as e:
                pass

            try:
                with open(settings.path_to_installers + installer + "\\#.nova_hub" + "\\" + "data.json", "r") as f:
                    data_json = json.load(f)
                    ver = data_json["version"]

            except Exception as e:
                ver = 0

            modpack_frame = Frame(installations_frame, width=240, height=250, bg="#282727")
            modpack_frame.grid(row=0, column=1 + amount_of_installers, padx=15, pady=15)

            try:
                Pack_Image = Image.open(settings.path_to_installers + installer + "\\#.nova_hub\\banner.png") #Remove "f" in production version.
            except FileNotFoundError as e:
                try:
                    Pack_Image = Image.open(settings.path_to_installers + installer + "\\#.nova_hub\\banner.jpeg")
                except Exception as e:
                    Pack_Image = Image.open(settings.path_to_images + "no_banner.png")

            width, height = Pack_Image.size
            
            actual_width = round(int(width)/8.12)
            actual_height = round(int(height)/8.12)

            Pack_Image = Pack_Image.resize((actual_width, actual_height))
            tkimage = ImageTk.PhotoImage(Pack_Image)
            pack_image_frame = Label(modpack_frame, image=tkimage, bg="#282727", cursor="hand2")
            pack_image_frame.photo = tkimage
            pack_image_frame.place(x=0, y=0)
    
            modpack_title_font = font.Font(family='Arial Rounded MT Bold', size=15, weight='bold', underline=False)
            modpack_title = Label(modpack_frame, text=installer.upper().replace("_", " "), font=modpack_title_font, fg="#C52612", bg="#282727") #Where I left off
            modpack_title.place(x=0, y=135)

            #Version Label
            version_font = font.Font(family='Arial Rounded MT Bold', size=8, weight='bold', underline=False)
            version_label = Label(modpack_frame, text="V" + str(ver), font=version_font, fg="#C52612", bg="#282727") #Where I left off
            version_label.place(x=0, y=233)

            #Settings Button
            settings_image = Image.open(settings.path_to_images + "modpack_settings.png")

            width, height = settings_image.size
            
            actual_width = round(int(width)/28)
            actual_height = round(int(height)/28)

            settings_image = settings_image.resize((actual_width, actual_height))
            tkimage = ImageTk.PhotoImage(settings_image)
            settings_button = Button(modpack_frame, text="Install", image=tkimage, font=("Arial Bold", 16), fg="white", bg="#282727", borderwidth=0, 
            cursor="hand2")
            settings_button.photo = tkimage
            settings_button.place(x=196, y=200)

            install_image = Image.open(settings.path_to_images + "nova_hub_install_button.png")

            width, height = install_image.size
            
            actual_width = round(int(width)/14)
            actual_height = round(int(height)/14)

            install_image = install_image.resize((actual_width, actual_height))
            tkimage = ImageTk.PhotoImage(install_image)
            installs_button = Button(modpack_frame, text="Install", image=tkimage, font=("Arial Bold", 16), fg="white", bg="#282727", activebackground="#C06565", borderwidth=0, 
            cursor="hand2")
            installs_button.config(command=lambda modpack_frame=modpack_frame, installs_button=installs_button, pack_image_frame=pack_image_frame, version_label=version_label, modpack_title=modpack_title, 
            installer=installer, run=run, run_option="NORMAL" : install_modpack(modpack_frame, installs_button, pack_image_frame, version_label, modpack_title, installer, run, "NORMAL"))
            installs_button.photo = tkimage
            installs_button.place(x=53, y=180)
            installs_button.bind("<Enter>", lambda event, modpack_frame=modpack_frame, pack_image_frame=pack_image_frame, 
            modpack_title=modpack_title, version_label=version_label, settings_button=settings_button: install_button_hover_enter(event, modpack_frame, pack_image_frame, modpack_title, version_label, settings_button))
            installs_button.bind("<Leave>", lambda event, modpack_frame=modpack_frame, pack_image_frame=pack_image_frame, 
            modpack_title=modpack_title, version_label=version_label, settings_button=settings_button: install_button_hover_leave(event, modpack_frame, pack_image_frame, modpack_title, version_label, settings_button))

            #Notice for later: Maybe add a rotaion effect to the settings icon.

            if data_json["installed"] == True:
                hex_colour = Color("#171717")
                colours = list(hex_colour.range_to(Color("#00B6C0"), 40))

                hex_colour = Color("#C52612") #Text
                colours_text = list(hex_colour.range_to(Color("black"), 12))

                launch_image = Image.open(settings.path_to_images + "nova_hub_launch_button.png")

                width, height = launch_image.size
                
                actual_width = round(int(width)/14)
                actual_height = round(int(height)/14)

                launch_image = launch_image.resize((actual_width, actual_height))
                tkimage = ImageTk.PhotoImage(launch_image)
                launch_button = Button(modpack_frame, text="Launch", image=tkimage, font=("Arial Bold", 16), fg="white", bg="#00B6C0", activebackground="#00B6C0", borderwidth=0, 
                cursor="hand2")
                launch_button.config(command=launch)
                launch_button.photo = tkimage
                launch_button.place(x=53, y=180)

                t8=threading.Thread(target=modpack_glow_effect, args=([modpack_frame, launch_button, pack_image_frame, modpack_title, version_label, settings_button, colours, colours_text]))
                t8.setDaemon(True)
                t8.start()

            amount_of_installers =+ 1
            downloaded_modpacks['modpacks'][installer.lower()] = {} #Adds installer to avalible modpacks list.
            downloaded_modpacks['modpacks'][installer.lower()]['ver'] = ver

            t3=threading.Thread(target=modpack_updater, args=(["NORMAL"]))
            t3.start()